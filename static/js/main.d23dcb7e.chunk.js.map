{"version":3,"sources":["action/index.js","components/Header.js","components/Item.js","components/Laptop.js","components/Phone.js","components/ItemPhone.js","components/ItemLaptop.js","components/Order.js","components/Search.js","App.js","reducers/itemReducer.js","serviceWorker.js","index.js"],"names":["fetchItemsPhone","type","payload","item","data","Phone","fetchPhoneFilter","activeBrands","activeRam","activeMemory","phone","length","brand","filterPhone","filter","elem","name","toLowerCase","concat","phoneRam","Ram","parameter","ram","indexOf","phoneMemory","Memory","filterMemory","memory","Header","useEffect","dispatch","PhoneInfo","useState","search","setSearch","history","useHistory","locationPathName","useLocation","pathname","toggleChange","setToggle","toggle","setPhone","togglebrand","setToggleBrand","phoneParameter","setPhoneParameter","Laptop","phoneInfo","useSelector","state","menuListItem","phoneBrand","activeBrand","setActiveBrand","setActiveRam","setActiveMemory","useDispatch","itemCount","newPhoneItem","className","onClick","push","Object","keys","map","i","key","id","index","str","splice","newActiveBrand","setBrand","src","width","height","alt","newActiveRam","setRam","newActiveMemory","setMemory","onSubmit","e","preventDefault","onChange","target","value","goBack","Item","itemsLaptop","handleClick","img","price","itemsPhone","mounted","setMounted","dataPhone","sort","a","b","Price","fetchPriceFilter","dataPhoneName","fetchFilterName","model","ItemPhone","itemId","useParams","find","toString","fetchItemPhone","itemPhone","count","setCount","setPrice","AvailableColors","values","Color","setColor","activeColor","setActiveColor","handleSetRam","Number","handleSetMemory","handleSetColor","Colors","undefined","year","color","style","backgroundColor","itemInfo","fetchItemOrder","ItemLaptop","parseInt","screen","processor","Order","items","fetchItemRemove","RemoveItem","Search","searchItem","App","exact","path","component","inititalState","totalItem","itemReducer","action","loading","newState","findIndex","x","newArray","uniqueObject","objTitle","phoneItem","console","log","Boolean","window","location","hostname","match","store","createStore","rootReducer","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d23dcb7e.chunk.js","sourcesContent":["import data from '../JSONSERVER/db.json'\r\n\r\n\r\n export function fetchItemsPhone() {\r\n    return {\r\n        type: 'FETCH_ITEMS_PHONE',\r\n        payload: {\r\n          item:data.Phone\r\n        } \r\n     }\r\n }\r\n\r\n export function fetchItemPhone(itemId) {\r\n   return {\r\n     type: \"FETCH_ITEM_PHONE\",\r\n      payload: {\r\n        item: data.Phone.find(elem=>elem.id === itemId.toString())\r\n      } \r\n   }\r\n }\r\n\r\nexport function fetchMenuList(itemId) {\r\n  return {\r\n    type:\"FETCH_MENU_LIST\",\r\n    payload: {\r\n       item:data.Phone.find(elem=>elem.id === itemId)\r\n    }\r\n  }  \r\n}\r\n export function fetchItemOrder(itemInfo) {\r\n   return {\r\n     type: \"FETCH_ITEM_ORDER\",\r\n     payload: {\r\n      item:itemInfo\r\n     }\r\n   }\r\n }\r\n\r\nexport function fetchItemRemove(item) {\r\n return {\r\n   type: \"FETCH_ITEM_REMOVE\",\r\n   payload: item\r\n }\r\n}\r\n\r\nexport function fetchTotalItem() {\r\n  const total = data.Phone.concat(data.Laptop)\r\n  return {\r\n    type:\"FETCH_TOTAL_ITEM\",\r\n    payload: total\r\n  }\r\n}\r\n\r\nexport function fetchItemSearch(name) {\r\n  return {\r\n    type:\"FETCH_ITEM_SEARCH\",\r\n    payload: data.Phone.concat(data.Laptop).filter(elem=>elem.name === name)\r\n  }\r\n}\r\nexport function fetchPhoneInfo() {\r\n  return {\r\n    type:\"FETCH_PHONE_INFO\",\r\n    payload: data.PhoneInfo[0]\r\n  }\r\n}\r\n//  function filterFunc(origArr,updatingArr) {\r\n//   for(var i = 0, l = origArr.length; i < l; i++) {\r\n//     for(var j = 0, ll = updatingArr.length; j < ll; j++) {\r\n//         if(origArr[i].name === updatingArr[j].name) {\r\n//             origArr.splice(i, 1, updatingArr[j]);\r\n//             break;\r\n//         }\r\n//     }\r\n//   }\r\n//    return origArr\r\n//  }\r\n\r\n\r\n\r\nexport function fetchPhoneFilter(activeBrands,activeRam,activeMemory) {\r\n \r\n let phone = [];\r\n\r\n if (activeBrands.length != 0) {\r\n  for (let brand of activeBrands) {\r\n    let filterPhone = data.Phone.filter((elem)=> elem.name.toLowerCase() === brand)\r\n    phone = phone.concat(filterPhone);\r\n   }\r\n } else {\r\n   phone = [...data.Phone]  \r\n }\r\n\r\n  \r\n  let phoneRam = []\r\n  if (activeRam.length != 0) {\r\n  for (let Ram of activeRam) {\r\n    let filterPhone = phone.filter((elem)=> elem.parameter.ram.indexOf(Ram) > -1 );\r\n    phoneRam = phoneRam.concat(filterPhone);\r\n }\r\n  } else {\r\n    phoneRam = [...phone]\r\n  }\r\n let phoneMemory = []\r\n if (activeMemory.length != 0) {\r\n  for (let Memory of activeMemory) {\r\n    let filterMemory = phoneRam.filter((elem)=>elem.parameter.memory.indexOf(Memory) > -1)\r\n    phoneMemory = phoneMemory.concat(filterMemory)\r\n   }\r\n } else {\r\n  phoneMemory = [...phoneRam]\r\n }\r\n \r\n return {\r\n    type:\"FETCH_PHONE_FILTER\",\r\n    payload: activeBrands.length == 0 && activeRam.length == 0 && activeMemory.length == 0 ? data.Phone : phoneMemory\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function fetchPhoneMemory(activeMemory) {\r\n  return {\r\n    type:\"FETCH_PHONE_MEMORY\",\r\n    payload: activeMemory\r\n  }\r\n}\r\nexport function fetchNameFilter() {\r\n \r\n return {\r\n   type:\"FETCH_NAME_FILTER\",\r\n    payload: data.Phone.sort() \r\n }\r\n}\r\n\r\nexport function fetchPriceFilter() {\r\n  let dataPhone = [...data.Phone]\r\n  dataPhone.sort((a, b) => (a.Price > b.Price) ? 1 : -1)\r\n  return { \r\n    type:\"FETCH_PRICE_FILTER\",\r\n    payload: dataPhone\r\n  }\r\n}\r\n\r\nexport function fetchFilterName() {\r\n  let dataPhoneName = [...data.Phone];\r\n  dataPhoneName.sort((a,b)=> (a.name > b.name) ? 1: -1)\r\n  return {\r\n    type: \"FETCH_NAME_FILTER\",\r\n    payload: dataPhoneName \r\n  }\r\n}\r\n\r\n export function fetchItemLaptop() {\r\n    return {\r\n        type: 'FETCH_ITEM_LAPTOP',\r\n        payload: {\r\n          item:data.Laptop,\r\n        } \r\n     }\r\n }\r\n\r\n export function fetchItemBegin() {\r\n     return {\r\n         type:\"FETCH_ITEM_BEGIN\"\r\n     }\r\n }\r\n\r\n ","import React,{useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {fetchItemSearch,fetchPhoneInfo,fetchPhoneFilter,fetchPhoneMemory} from '../action'\r\nimport data from '../JSONSERVER/db.json'\r\nfunction Header() {\r\n  useEffect(()=>{\r\n      dispatch(fetchPhoneInfo())\r\n    })\r\n\r\nconst [search,setSearch] = useState()\r\nconst handleChange = (e) => {\r\n    setSearch(e.target.value)\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(fetchItemSearch(search))\r\n    history.push('/Search')\r\n}\r\n\r\nconst history =  useHistory();\r\nconst handlGoBack = () => {\r\n history.goBack()\r\n}\r\nconst location = useLocation();\r\nconst locationPathName = location.pathname\r\n\r\nconst handleHomePage = () => {\r\n    history.push('/')\r\n}\r\n\r\nconst handleOrderPage = () => {\r\n    history.push('/order')\r\n}\r\n\r\nconst toggleChange = () => {\r\n  setToggle(!toggle)\r\n}\r\n const [toggle,setToggle] = useState(false);\r\n\r\n \r\nconst [phone,setPhone] = useState(false);\r\n\r\nconst togglePhone = () => {\r\n    setPhone(!phone)\r\n    history.push(\"/Phone\")\r\n}\r\n\r\nconst [togglebrand,setToggleBrand] = useState(false);\r\n\r\nconst toggleBrand = () => {\r\n    setToggleBrand(!togglebrand)\r\n   \r\n}\r\n\r\nconst [phoneParameter,setPhoneParameter] = useState(false);\r\n\r\nconst togglePhoneParameter = () => {\r\n  setPhoneParameter(!phoneParameter)\r\n}\r\n const [phoneData,setPhoneData] = useState(data.Phone);\r\n const [laptopData,setLaptopData] = useState(data.Laptop);\r\n \r\n const item = useSelector(state=>state.menuListItem)\r\n const phoneInfo = useSelector(state=>state.phoneInfo);\r\n const phoneBrand = phoneInfo.brand;\r\nconst phoneRam = phoneInfo.ram;\r\nconst phoneMemory = phoneInfo.memory\r\n//  const phoneBrandImg = phoneInfo.map(elem=>{\r\n//    return Object.values(elem.brand)\r\n//  })\r\n// const Img = phoneBrandImg.map(elem=>{\r\n//   return elem\r\n// })\r\n// console.log(Img[0]);\r\nconst [activeBrand,setActiveBrand] = useState([]);\r\nconst [activeRam,setActiveRam] = useState([]);\r\n\r\nconst setBrand =  (id) => {\r\n let index = activeBrand.indexOf(id);\r\n let str = [...activeBrand];\r\n  str.splice(index,1);\r\n  \r\n   index !== -1 ? setActiveBrand([...str]) : setActiveBrand([...activeBrand,id])\r\n   let newActiveBrand = index !== -1 ? [...str] : [...activeBrand,id]\r\n   \r\n   dispatch(fetchPhoneFilter(newActiveBrand,activeRam,activeMemory))\r\n   \r\n  history.push({\r\n    pathname: '/Phone',\r\n    phone:  newActiveBrand, \r\n    ram: activeRam\r\n   })\r\n }\r\n \r\n \r\n\r\nconst setRam =  (id) => {\r\n\r\n  let index = activeRam.indexOf(id);\r\n  let str = [...activeRam];\r\n   str.splice(index,1);\r\n  \r\n  index != -1 ? setActiveRam([...str]) : setActiveRam([...activeRam,id])\r\n  let newActiveRam = index !== -1 ? [...str] : [...activeRam,id];\r\n  dispatch(fetchPhoneFilter(activeBrand,newActiveRam,activeMemory))\r\n history.push({\r\n  pathname: '/Phone',\r\n  state: {\r\n    phone:  activeBrand, \r\n    ram: newActiveRam\r\n   }\r\n })\r\n\r\n }\r\n\r\n const [activeMemory,setActiveMemory] = useState([])\r\n\r\n const setMemory =  (id) => {\r\n  let index = activeMemory.indexOf(id);\r\n  let str = [...activeMemory];\r\n  str.splice(index,1);\r\n   index !== -1 ? setActiveMemory([...str]) : setActiveMemory([...activeMemory,id])\r\n let newActiveMemory = index !== -1 ? [...str] : [...activeMemory,id];\r\n\r\n dispatch(fetchPhoneFilter(activeBrand,activeRam,newActiveMemory))\r\n //   history.push(\"/Phone\")\r\n}\r\n const dispatch = useDispatch();\r\n\r\n //const [phoneItem,setPhoneItem] = useState([]);\r\n//  const handleSetPhoneId = (id) => {\r\n//      let index = phoneItem.indexOf(id)\r\n     \r\n//     let str = [...phoneItem] \r\n//     str.splice(index, 1)\r\n//     dispatch(fetchMenuList(id))\r\n//     index !== -1 ? setPhoneItem([...str]): setPhoneItem([...phoneItem,id])\r\n\r\n//  }\r\n//  {phoneData.map((item,id)=>{\r\n//     return(\r\n//      <div  className=\"PhoneBrands\" key={id}>   \r\n//     <h3><span>{item.name}</span><button onClick={()=>handleSetPhoneId(item.id)}></button></h3>\r\n//     {phoneItem.indexOf(item.id) !== -1  && <li><span>Model:</span> {item.model}<button onClick={toggleParameter}></button></li> }\r\n//   {toggleParam &&  <ul className=\"PhoneBrandsParameter\">\r\n//    <li>Ram:{item.parameter.ram.map(elem=>{return(\r\n//        <span>{elem}</span>\r\n//    )})} \r\n//    </li>\r\n//    <li>Memory:{item.parameter.memory.map(elem=>{return(\r\n//       <span>{elem}</span>\r\n//    )})}\r\n//    </li>\r\n//    </ul> }\r\n//  </div>\r\n//     )\r\n// })}\r\n\r\n const itemCount = useSelector(state=>state.newPhoneItem.length)\r\n \r\n    return (\r\n        <>\r\n         { toggle && <div className=\"menuList\">\r\n         <button className=\"Close\" onClick={toggleChange}>X</button>\r\n            \r\n              {/* <h4>Laptop</h4>  */}\r\n              <button  className=\"menuListButton\">\r\n                   <h1>Phone</h1> \r\n                   <span onClick={togglePhone}>&#10097;</span> \r\n             </button>  \r\n              <div className=\"menuListParameter\">\r\n               {phone && \r\n               <h2 className=\"phoneBrandsTitle\">\r\n                <span>Brands</span><button onClick={toggleBrand}>&#x21E8;</button>\r\n               </h2>\r\n              }\r\n              { togglebrand && \r\n               <div className=\"phoneBrands\">\r\n                <ul>\r\n                 {Object.keys(phoneBrand).map((elem,i)=>{\r\n                return(\r\n                  <li className={activeBrand.indexOf(elem) !== -1 ? \"active\" : \"\"} key={i} onClick={()=>setBrand(elem)}>\r\n                    <img src={phoneBrand[elem]} width=\"25px\" height=\"25px\" alt=\"\"/>\r\n                  </li>)   \r\n                })}   \r\n               </ul>\r\n             </div>\r\n            }\r\n            {phone && \r\n             <h2 className=\"phoneParameterTitle\">\r\n               <span>Parameter</span><button onClick={togglePhoneParameter}>&#x21E8;</button>\r\n            </h2>}\r\n               {phoneParameter && <div className=\"phoneParameter\">\r\n                <h4>Ram:</h4>\r\n               <ul>\r\n               {phoneRam.map((elem,id)=>{\r\n                return(\r\n                <li key={id} className={activeRam.indexOf(elem) !== -1 ? \"active\" : \"\"}  onClick={()=>setRam(elem)}>{elem}</li>\r\n                )   \r\n               })}   \r\n              </ul>\r\n              <h4>Memory:</h4>\r\n              <ul>\r\n               {phoneMemory.map((elem,id)=>{\r\n                return(\r\n                <li key={id} className={activeMemory.indexOf(elem) !== -1 ? \"active\" : \"\" } onClick={()=>setMemory(elem)}>{elem}</li>\r\n                )   \r\n               })}   \r\n              </ul>\r\n              </div>} \r\n            </div>\r\n              \r\n            \r\n           </div>\r\n        } \r\n        \r\n        <div className=\"Header\" >\r\n            <div className=\"menu\" >\r\n                <img width=\"60px\" height=\"70px\" src=\"https://goodmade.ru/upload/000/u1/101/39aadfae.png\" alt=\"menu\"  onClick={toggleChange}/>\r\n               <h1 onClick={handleHomePage}>My Amazon Store</h1>\r\n            </div>\r\n            <form className=\"search\" onSubmit={handleSubmit}>\r\n              <input name=\"search\" type=\"text\" onChange={handleChange} />\r\n              <input type=\"submit\" value=\"\"/>\r\n            \r\n            </form>\r\n            \r\n            <div className=\"orderList\" onClick={handleOrderPage}>\r\n    <button>\r\n        {itemCount !== 0 &&<span className=\"orderCount\">{itemCount}</span>}\r\n        </button>\r\n            </div>\r\n        </div>\r\n      {\r\n      locationPathName !== '/' && <div className=\"goBack\" onClick={handlGoBack}>\r\n        <button></button>\r\n      </div>\r\n      }\r\n        \r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nexport default function Item() {\r\n   const history = useHistory();\r\n   const handlePhoneClick = () => {\r\n      history.push('/Phone')\r\n   }\r\n   const handleLaptopClick = () => {\r\n      history.push('/Laptop')\r\n   }\r\n    return (\r\n       <div className=\"Items\">\r\n        <div className=\"ItemPhone\" onClick={handlePhoneClick}>\r\n         <img src=\"https://www.newsytribune.com/wp-content/uploads/2020/07/Best-Budget-Phone-Under-200.jpg\" width=\"400px\" height=\"400px\" alt=\"Phone item\" />\r\n        </div>\r\n\r\n        <div className=\"ItemLaptop\" onClick={handleLaptopClick}>\r\n        <img src=\"https://api.time.com/wp-content/uploads/2017/05/laptops.jpg\" width=\"400px\" height=\"400px\" alt=\"Laptop item\" />\r\n        </div>\r\n\r\n        </div> \r\n     )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory} from 'react-router-dom'\r\nimport { fetchItemLaptop } from '../action';\r\n\r\nexport default function Laptop() {\r\n    // const location = useLocation()\r\n    // console.log(location);\r\n    const Laptop = useSelector(state => state.itemsLaptop);\r\n    const dispatch = useDispatch();\r\n  \r\n\r\n    useEffect(() => {\r\n        dispatch(fetchItemLaptop())\r\n    }, [])\r\n    \r\n    let history = useHistory()\r\n    const handleClick = (item) => {\r\n      history.push('/ItemLaptop',{item})\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Laptop\">\r\n           {Laptop.map(item=> {\r\n            return (\r\n                <div className=\"LaptopItem\" key={item.id} onClick={()=>handleClick(item)}>\r\n                    <h1>{item.name}</h1>\r\n                     <img src={item.img} width=\"200px\" height=\"200px\" alt={`Phone Image ${item.id}`} />\r\n                     <h1>{item.price}</h1>\r\n                </div>   \r\n            )\r\n          })}\r\n        \r\n          \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState,useEffect} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {useHistory, useLocation} from \"react-router-dom\"\r\nimport {fetchItemsPhone,fetchPriceFilter,fetchFilterName,fetchPhoneFilter} from '../action'\r\n\r\nexport default function Item() {\r\n  let param = useLocation();\r\n  \r\n  const phone = useSelector(state => state.itemsPhone);\r\n  const dispatch = useDispatch();\r\n  const [mounted,setMounted] = useState(true);\r\n  \r\n useEffect(() => {\r\n     dispatch(fetchItemsPhone())\r\n     setMounted(false)\r\n   \r\n    //(param.phone || param.ram) && dispatch(fetchPhoneFilter(param.phone,param.ram))\r\n  }, [mounted])\r\n\r\n  const history = useHistory()\r\n   const handleClick = (item) => {\r\n    history.push(`/ItemPhone/${item.id}`)\r\n   }  \r\n   \r\n  \r\n const [sortItem,setSortItem] = useState(\"\");\r\n   const handleSortItem = (e) => {\r\n    if (e.target.value == \"Price\") {\r\n       dispatch(fetchPriceFilter(e.target.value))\r\n     } else if (e.target.value == \"Name\") {\r\n       dispatch(fetchFilterName(e.target.value))\r\n     } else {\r\n       dispatch(fetchItemsPhone())\r\n     }\r\n   }\r\n    \r\n   \r\n   \r\n    return (\r\n       <div className=\"Phone\">\r\n         <div className=\"PhoneFilter\">\r\n           <select onChange={handleSortItem}>\r\n             <option>Default</option>\r\n             <option>Price</option>\r\n             <option>Name</option>\r\n          </select>\r\n         </div>\r\n        <div className=\"PhoneCentre\">\r\n          {phone.map(item=> {\r\n           \r\n           return (\r\n               <div className = \"PhoneItem\" key={item.id}>\r\n                   \r\n           <h1>{item.name} {item.model}</h1>\r\n                   <img  onClick={()=>handleClick(item)} src={item.img} width=\"200px\" height=\"200px\" alt={`Phone Image ${item.id}`} />\r\n                   <h1>{item.price[0]}$</h1>\r\n                  \r\n               </div>\r\n               \r\n           )\r\n            })}\r\n        </div>\r\n    </div> \r\n     )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { useHistory, useParams} from 'react-router-dom'\r\nimport {fetchItemOrder,fetchItemPhone} from '../action/index'\r\nexport default function ItemPhone() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    let params = useParams();\r\n    let itemId = params.itemId;\r\n   \r\n    useEffect(()=>{\r\n        dispatch(fetchItemPhone(itemId))\r\n        return () => {\r\n           \r\n        }\r\n    },[itemId])\r\n    \r\n    let item = useSelector(state => state.itemPhone);\r\n   \r\n    const [count,setCount] = useState(1);\r\n\r\n    \r\n    const memory = item.parameter.memory;\r\n    const ram =item.parameter.ram;\r\n   let [Price,setPrice] = useState();\r\n   \r\n  const AvailableColors = Object.values(item.parameter.AvailableColors);\r\n  \r\n   const increment = () => {\r\n        setCount(count + 1)\r\n        setPrice(Number(activeColor*50)+(Number(activeMemory*20)+Number(item.price[activeRam]))*(count+1))\r\n    } \r\n\r\n    const decrement = () => {\r\n        if (count > 1) {\r\n\r\n            setCount(count - 1)\r\n            setPrice(Number(activeColor*50)+(Number(activeMemory*20)+Number(item.price[activeRam]))*(count-1))\r\n     \r\n        }\r\n        \r\n    } \r\n   \r\n\r\n\r\n   const handleOrderClick = () => {\r\n       Color = Color === '' ? item.parameter.color : Color;\r\n       Ram = Ram === '' ? ram[0] : Ram;\r\n       Memory = Memory === '' ? memory[0] : Memory;\r\n       Price = Price === undefined ? item.price[0] : Price;\r\n\r\n    let itemInfo = {\r\n        \"id\":item.id,\r\n        \"count\":1,\r\n        \"name\": item.name,\r\n        \"model\": item.model,\r\n        \"img\": item.Colors[Color],\r\n        \"color\": Color,\r\n        \"ram\": Ram,\r\n        \"memory\":Memory,\r\n        \"price\": Price\r\n    }\r\n    \r\n   dispatch(fetchItemOrder(itemInfo))\r\n     history.push('/Order')\r\n   } \r\n   \r\n  \r\nlet [Color,setColor] = useState(\"\")\r\nlet [Ram,setRam] = useState(\"\");\r\nlet [Memory,setMemory] = useState(\"\");\r\n\r\nconst [activeRam,setActiveRam] = useState(0);\r\nconst [activeMemory,setActiveMemory] = useState(0);\r\n\r\nconst [activeColor,setActiveColor] = useState(0);\r\n\r\nconst handleSetRam = (elem,id) => {\r\n    setRam(elem);\r\n    setPrice(Number(activeColor*50)+Number(activeMemory*20)+Number(item.price[id])*count)\r\n    setActiveRam(id)\r\n}\r\n\r\nconst handleSetMemory = (elem,id) => {\r\n    setMemory(elem);\r\n    setActiveMemory(id)\r\n    setPrice(Number(activeColor*50)+Number(id*20)+Number(item.price[activeRam])*count)\r\n}\r\n\r\nconst handleSetColor = (elem,id) => {\r\n    setColor(elem)\r\n    setActiveColor(id)\r\n    setPrice(Number(id*50)+Number(activeMemory*20)+Number(item.price[activeRam])*count)\r\n}\r\n\r\n \r\n    return (\r\n        <div className=\"PhoneConatiner\">\r\n            <div className=\"PhoneConatinerCenter\">\r\n                <div className=\"PhoneImageNav\">\r\n                <img width=\"350px\" height=\"400px\" src={ Color? item.Colors[Color] : item.img}  alt=\"PhoneImg\"/>\r\n            </div> \r\n                <div className=\"PhoneConatinerParameter\">\r\n                    <div className=\"PhonePrice\">\r\n                <h1>{item.name}</h1>\r\n                <h1>{item.model}</h1>\r\n               <h1>Price: {Price == undefined ? item.price[0]: Price}$</h1>\r\n               <button onClick={increment}>+</button> {count} \r\n               <button onClick={decrement}>-</button>\r\n                </div>\r\n               <hr />\r\n               <div className=\"PhoneParameter\">\r\n               <h4 className= \"PhoneRam\"><span>Ram:</span> {ram.map((item,id)=> {\r\n                  return(\r\n                   <li key={id} className = {activeRam == id ? \"active\": \"\"} onClick={()=>handleSetRam(item,id)}>{item}</li>\r\n                  )\r\n              })}</h4>\r\n\r\n              <h4 className=\"PhoneMemory\"> <span>Memory:</span> {memory.map((item,id)=> {\r\n                  return(\r\n                  <li key={id} className = {activeMemory === id ? \"active\": \"\"} onClick={()=>handleSetMemory(item,id)}>{item}</li>\r\n                  )\r\n              })}</h4> \r\n               <h4>Announcement Year: {item.parameter.year}</h4>\r\n               <h4>Color: {Color? Color : item.parameter.color}</h4>\r\n            <h4 className=\"PhoneAvailableColors\"><span>Available Color: </span>{AvailableColors.map((item,id)=> {\r\n                return(\r\n                    <li key={id} className={activeColor == id ? \"active\" : \"\"} onClick={()=>handleSetColor(item,id)} style={{backgroundColor:`${item}`}}></li>\r\n                )\r\n            })}</h4>\r\n               </div>\r\n              \r\n               <button className=\"PhoneBuy\" onClick={handleOrderClick}>\r\n                  <span className=\"ico\"></span> \r\n                  <p className=\"icoText\">Buy</p>\r\n              </button> \r\n              \r\n             </div>\r\n               \r\n             </div>   \r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function ItemLaptop() {\r\n    const location = useLocation()\r\n    const item = location.state.item\r\n    const [count,setCount] = useState(1);\r\n    const price = parseInt(item.price) * count;\r\n\r\n    const increment = () => {\r\n        setCount(count + 1)\r\n    }\r\n\r\n    const decrement = () => {\r\n        if (count > 1) {\r\n            setCount(count - 1)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"LaptopConatiner\">\r\n            <div className=\"LaptopConatinerCenter\">\r\n                <div className=\"LaptopImageNav\">\r\n                <img width=\"500px\" height=\"450px\" src={item.img}  alt=\"LaptopImg\"/>\r\n                </div>\r\n                <div className=\"LaptopConatinerParameter\">\r\n                    <div className=\"LaptopPrice\">\r\n                <h1>{`${item.name} ${item.model}`}</h1>\r\n                <h1>Price: {price}$</h1>\r\n                <button onClick={increment}>+</button> {count} \r\n               <button onClick={decrement}>-</button>\r\n               </div>\r\n               <hr />\r\n               <div className=\"LaptopParameter\">\r\n               <h4>Screen: {item.parameter.screen} inch</h4>\r\n               <h4>Processor: {item.parameter.processor}</h4>\r\n               <h4>Ram: {item.parameter.ram}</h4>\r\n               <h4>Memory: {item.parameter.memory}</h4>\r\n               <h4>Announcement Year: {item.parameter.year}</h4>\r\n               <h4>Colors: {item.parameter.color}</h4>\r\n               </div>\r\n              \r\n                </div>\r\n               \r\n             </div>   \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchItemRemove } from '../action';\r\n\r\n\r\nexport default function Order() {\r\n   let dispatch = useDispatch();\r\n   const items = useSelector(state=>state.newPhoneItem);\r\n   const RemoveItem = (item) => {\r\n      //console.log(item);\r\n     dispatch(fetchItemRemove(item))\r\n   }\r\n   \r\n   \r\n   \r\n   return (\r\n        <div className=\"OrderContainer\">\r\n           <div className=\"OrderCenterContainer\">\r\n           <h1>Your Items {items.length}</h1>\r\n           <h1>{items.length === 0 && \"No Items Found\"}</h1>\r\n           {\r\n             items.map((item,id)=> {\r\n               return(\r\n                  <div className=\"OrderItem\" key={id}>\r\n                  <div className=\"OrderImg\">\r\n                     <img src={item.img} width=\"150px\" height=\"170px\" alt=\"Img\" />\r\n                  </div>\r\n                 <div className=\"OrderParameter\">\r\n                 <h1>{item.name} {item.model}</h1>\r\n                 <h3>Ram: {item.ram}</h3>\r\n                 <h3>Memory:{item.memory}</h3>\r\n                 <h3>Color: {item.color}</h3>\r\n                  <h3>Price: {item.price}$</h3>\r\n                  <h3>Count: {item.count} </h3>\r\n           <div className=\"Buy_Delete\">\r\n                  <div className=\"Buy\">\r\n                 <button className=\"PhoneBuy\" >\r\n                  <span className=\"ico\"></span> \r\n                  <p className=\"icoText\">Buy</p>\r\n                 </button>\r\n              </div>\r\n              <div className=\"Remove\" onClick={()=>RemoveItem(item)}>\r\n                 <button className=\"PhoneDelete\" >\r\n                  <span className=\"icoDelete\"></span> \r\n                  <p className=\"icoDeleteText\">Remove</p>\r\n                 </button>\r\n              </div>\r\n         </div>\r\n             </div>\r\n             \r\n\r\n              </div>\r\n               )\r\n             })\r\n           }\r\n               \r\n           </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Search() {\r\n    const item = useSelector(state=>state.searchItem)\r\n    const history = useHistory();\r\n    \r\n  const handleClick = (item) => {\r\n    (item.type === \"phone\") ? history.push(`/ItemPhone/${item.id}`) : history.push(`/ItemLaptop/`,item)\r\n  }\r\n    return (\r\n       <>\r\n       { (item.length !== 0 || item.length !== '') ?  <div className=\"SearchContainer\">\r\n         {item.map(item=> {\r\n             return (\r\n                 <div className = \"SearchItem\" key={item.id} onClick={()=>handleClick(item)}>\r\n                     \r\n             <h1>{item.name} {item.model}</h1>\r\n                     <img src={item.img} width=\"200px\" height=\"200px\" alt={`Phone Image ${item.id}`} />\r\n                     <h1>{item.price[0]}$</h1>\r\n                    \r\n               </div>\r\n                 \r\n             )\r\n         })}\r\n          \r\n\r\n        </div> : <h1 className=\"SearchError\">Not found Item</h1> }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useEffect } from 'react';\nimport Header from './components/Header'\nimport Item from './components/Item'\nimport Laptop from './components/Laptop'\nimport Phone from './components/Phone'\nimport ItemPhone from './components/ItemPhone'\nimport ItemLaptop from './components/ItemLaptop'\nimport Order from './components/Order'\nimport Search from './components/Search'\nimport { BrowserRouter as Router,Route} from 'react-router-dom'\nimport {fetchTotalItem} from './action'\nimport './App.css';\nimport { useDispatch } from 'react-redux';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTotalItem())\n  }, [])\n  return (\n    <div className=\"App\">\n   \n    <Router>\n    <Header />\n     <div>\n       <Route exact path=\"/\" component={Item}/>\n       <Route path=\"/Phone\" component={Phone}/>\n       <Route path=\"/Item\" component={Item}/>\n       <Route  path=\"/Laptop\" component={Laptop}/>\n       <Route path=\"/ItemPhone/:itemId\" component={ItemPhone}/>\n       <Route path=\"/ItemLaptop\" component={ItemLaptop}/>\n       <Route path=\"/Order\" component={Order}/>\n       <Route path=\"/Search\" component={Search} />\n     </div>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","import data from '../JSONSERVER/db.json'\r\n\r\nconst inititalState = {\r\n    itemsPhone: [],\r\n    itemPhone:  {\r\n        \"id\": \"\",\r\n        \"name\": \"\",\r\n        \"model\": \"\",\r\n        \"img\": \"\",\r\n        \"Colors\": {},\r\n        \"parameter\": {\r\n          \"ram\": [],\r\n          \"memory\": [],\r\n          \"year\":\"\",\r\n          \"color\": \"\",\r\n          \"AvailableColors\": {}\r\n        },\r\n        \"price\": []\r\n      },\r\n    newPhoneItem:[],\r\n    itemsLaptop:[],\r\n    menuListItem:[],\r\n    totalItem:[],\r\n    searchItem:[],\r\n    phoneInfo: {},\r\n}\r\n\r\nconst itemReducer = (state = inititalState,action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_ITEM_BEGIN': {\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n        }\r\n\r\n        case 'FETCH_ITEMS_PHONE': \r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            itemsPhone: action.payload.item,\r\n        }\r\n\r\n        case \"FETCH_ITEM_PHONE\": \r\n        return {\r\n            ...state,\r\n            itemPhone: action.payload.item\r\n        }\r\n        \r\n        case \"FETCH_ITEM_ORDER\": \r\n        let newState = state\r\n        let index = state.newPhoneItem.findIndex(elem=>elem.price == action.payload.item.price)\r\n        index !== -1 ? newState.newPhoneItem[index].count++ : newState.newPhoneItem.push(action.payload.item)  \r\n         return {\r\n            ...newState,\r\n         }\r\n        \r\n        case \"FETCH_TOTAL_ITEM\":\r\n         return {\r\n             ...state,\r\n             totalItem: action.payload\r\n         }   \r\n   case \"FETCH_ITEM_REMOVE\":\r\n       \r\n   return {\r\n       ...state,\r\n       newPhoneItem:state.newPhoneItem.filter((x)=>  x.price  !== action.payload.price)\r\n    }\r\n    case \"FETCH_ITEM_SEARCH\": \r\n    return {\r\n        ...state,\r\n        searchItem: action.payload\r\n    }\r\n    case \"FETCH_PHONE_INFO\":\r\n      return {\r\n          ...state,\r\n          phoneInfo:action.payload\r\n      }  \r\n    case \"FETCH_PHONE_FILTER\":\r\n        let newArray = []; \r\n\t\tlet uniqueObject = {}; \r\n        \r\n        for (let i in action.payload ) { \r\n          let objTitle = action.payload[i]['id']; \r\n          uniqueObject[objTitle] = action.payload[i];\r\n        } \r\n        \r\n        for (let i in uniqueObject) { \r\n             newArray.push(uniqueObject[i]); \r\n        } \r\n        return {\r\n            ...state,\r\n            itemsPhone: newArray\r\n        }  \r\n    \r\n    case \"FETCH_PHONE_MEMORY\":\r\n        let phoneMemory = [];\r\n        let phoneItem = [...state.itemsPhone];\r\n         action.payload.map(item=>{\r\n            let filterMemory = state.itemsPhone.filter((elem)=>elem.parameter.memory.indexOf(item) > -1);\r\n            console.log(filterMemory);\r\n            phoneMemory = phoneMemory.concat(filterMemory);\r\n         })\r\n            \r\n        return {\r\n               ...state,\r\n               itemsPhone: action.payload.length === 0 ? phoneItem : phoneMemory\r\n           } \r\n            \r\n    case \"FETCH_MENU_LIST\":\r\n        return {\r\n           ...state,\r\n           menuListItem:action.payload.item \r\n        } \r\n    case \"FETCH_PRICE_FILTER\": \r\n       \r\n       return {\r\n        ...state,\r\n          itemsPhone:  [...action.payload]\r\n       } \r\n    case \"FETCH_NAME_FILTER\": \r\n      return {\r\n          ...state,\r\n          itemsPhone: [...action.payload]\r\n      }          \r\n      case 'FETCH_ITEM_LAPTOP': \r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            itemsLaptop: action.payload.item\r\n        }\r\n        \r\n        default: return state\r\n    }\r\n}\r\nexport default itemReducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport rootReducer from './reducers/itemReducer'\nimport * as serviceWorker from './serviceWorker';\nlet store = createStore(rootReducer,compose(\n  applyMiddleware(thunk),\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}