{"version":3,"sources":["action/index.js","action/laptop.js","components/MenuLaptop.js","components/MenuPhone.js","components/Header.js","components/Item.js","components/Laptop.js","components/Phone.js","components/ItemPhone.js","components/ItemLaptop.js","components/Order.js","components/Search.js","App.js","reducers/itemReducer.js","reducers/LaptopReducer.js","reducers/index.js","serviceWorker.js","index.js"],"names":["fetchItemsPhone","type","payload","item","data","Phone","fetchItemSearch","name","concat","Laptop","filter","elem","toLowerCase","fetchPhoneFilter","activeBrands","activeRam","activeMemory","phone","length","brand","filterPhone","phoneRam","Ram","parameter","ram","indexOf","phoneMemory","Memory","filterMemory","memory","fetchItemLaptop","fetchLaptopFilter","activeBrand","activeProcessor","laptop","filterLaptop","laptopProcessor","Processor","filterProcessor","processor","laptopRam","filterRam","laptopMemory","MenuLaptop","history","useHistory","dispatch","useDispatch","useState","setLaptop","toggleLaptopBrand","setToggleLaptopBrand","laptopParameter","setLaptopParameter","laptopInfo","useSelector","state","laptopBrand","setActiveBrand","setActiveProcessor","setActiveRam","setActiveMemory","className","onClick","Object","keys","map","id","key","index","str","splice","newActiveBrand","push","pathname","setBrand","src","width","height","alt","newActiveProcessor","setProcssor","newActiveRam","setRam","newActiveMemory","setMemory","MenuPhone","setPhone","togglePhoneBrand","setTogglePhoneBrand","phoneParameter","setPhoneParameter","phoneInfo","phoneBrand","i","Header","useEffect","PhoneInfo","LaptopInfo","search","setSearch","locationPathName","useLocation","toggleChange","setToggle","toggle","menuListItem","Count","orderCount","togglesearch","setToggleSearch","onSubmit","e","preventDefault","onChange","target","value","document","getElementsByClassName","classList","goBack","Item","itemsLaptop","param","mounted","handleClick","model","img","itemsPhone","setMounted","price","ItemPhone","itemId","useParams","find","toString","fetchItemPhone","itemPhone","count","setCount","Price","setPrice","AvailableColors","values","Color","setColor","activeColor","setActiveColor","handleSetRam","Number","handleSetMemory","handleSetColor","Colors","undefined","year","color","style","backgroundColor","itemInfo","fetchItemOrder","ItemLaptop","fetchLaptopPage","itemLaptop","parseInt","availableColors","handleSetProcessor","console","log","Order","items","newPhoneItem","orderPrice","fetchItemRemove","RemoveItem","Search","searchItem","App","exact","path","component","inititalState","totalItem","itemReducer","action","loading","newState","findIndex","x","newArray","uniqueObject","objTitle","phoneItem","dataPhone","sort","a","b","dataPhoneName","laptopReducer","dataLaptop","allReducer","combineReducers","Boolean","window","location","hostname","match","store","createStore","rootReducer","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6fecd3bc.chunk.js","sourcesContent":["import data from '../JSONSERVER/db.json'\r\n\r\n\r\n export function fetchItemsPhone() {\r\n    return {\r\n        type: 'FETCH_ITEMS_PHONE',\r\n        payload: {\r\n          item:data.Phone\r\n        } \r\n     }\r\n }\r\n\r\n export function fetchItemPhone(itemId) {\r\n   return {\r\n     type: \"FETCH_ITEM_PHONE\",\r\n      payload: {\r\n        item: data.Phone.find(elem=>elem.id === itemId.toString())\r\n      } \r\n   }\r\n }\r\n\r\nexport function fetchMenuList(itemId) {\r\n  return {\r\n    type:\"FETCH_MENU_LIST\",\r\n    payload: {\r\n       item:data.Phone.find(elem=>elem.id === itemId)\r\n    }\r\n  }  \r\n}\r\n export function fetchItemOrder(itemInfo) {\r\n   return {\r\n     type: \"FETCH_ITEM_ORDER\",\r\n     payload: {\r\n      item:itemInfo\r\n     }\r\n   }\r\n }\r\n\r\nexport function fetchItemRemove(item) {\r\n return {\r\n   type: \"FETCH_ITEM_REMOVE\",\r\n   payload: item\r\n }\r\n}\r\n\r\nexport function fetchTotalItem() {\r\n  const total = data.Phone.concat(data.Laptop)\r\n  return {\r\n    type:\"FETCH_TOTAL_ITEM\",\r\n    payload: total\r\n  }\r\n}\r\n\r\nexport function fetchItemSearch(name) {\r\n  return {\r\n    type:\"FETCH_ITEM_SEARCH\",\r\n    payload: data.Phone.concat(data.Laptop).filter(elem=>elem.name.toLowerCase() === name.toLowerCase())\r\n  }\r\n}\r\nexport function fetchPhoneInfo() {\r\n  return {\r\n    type:\"FETCH_PHONE_INFO\",\r\n    payload: data.PhoneInfo[0]\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function fetchPhoneFilter(activeBrands,activeRam,activeMemory) {\r\n \r\n let phone = [];\r\n\r\n if (activeBrands.length != 0) {\r\n  for (let brand of activeBrands) {\r\n    let filterPhone = data.Phone.filter((elem)=> elem.name.toLowerCase() === brand)\r\n    phone = phone.concat(filterPhone);\r\n   }\r\n } else {\r\n   phone = [...data.Phone]  \r\n }\r\n\r\n  \r\n  let phoneRam = []\r\n  if (activeRam.length != 0) {\r\n  for (let Ram of activeRam) {\r\n    let filterPhone = phone.filter((elem)=> elem.parameter.ram.indexOf(Ram) > -1 );\r\n    phoneRam = phoneRam.concat(filterPhone);\r\n }\r\n  } else {\r\n    phoneRam = [...phone]\r\n  }\r\n let phoneMemory = []\r\n if (activeMemory.length != 0) {\r\n  for (let Memory of activeMemory) {\r\n    let filterMemory = phoneRam.filter((elem)=>elem.parameter.memory.indexOf(Memory) > -1)\r\n    phoneMemory = phoneMemory.concat(filterMemory)\r\n   }\r\n } else {\r\n  phoneMemory = [...phoneRam]\r\n }\r\n \r\n return {\r\n    type:\"FETCH_PHONE_FILTER\",\r\n    payload: activeBrands.length == 0 && activeRam.length == 0 && activeMemory.length == 0 ? data.Phone : phoneMemory\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function fetchPhoneMemory(activeMemory) {\r\n  return {\r\n    type:\"FETCH_PHONE_MEMORY\",\r\n    payload: activeMemory\r\n  }\r\n}\r\n\r\n\r\nexport function fetchPriceFilter() {\r\n  return { \r\n    type:\"FETCH_PRICE_FILTER\"\r\n  }\r\n}\r\n\r\nexport function fetchFilterName() {\r\n  return {\r\n    type: \"FETCH_NAME_FILTER\"\r\n  }\r\n}\r\n\r\n export function fetchItemLaptop() {\r\n    return {\r\n        type: 'FETCH_ITEM_LAPTOP',\r\n        payload: {\r\n          item:data.Laptop,\r\n        } \r\n     }\r\n }\r\n\r\n export function fetchItemBegin() {\r\n     return {\r\n         type:\"FETCH_ITEM_BEGIN\"\r\n     }\r\n }\r\n\r\n ","import { MemoryRouter } from 'react-router-dom'\r\nimport data from '../JSONSERVER/db.json'\r\nexport function fetchItemLaptop() {\r\n    return {\r\n        type: 'FETCH_ITEM_LAPTOP',\r\n        payload: {\r\n          item:data.Laptop,\r\n        } \r\n     }\r\n }\r\n     export function fetchLaptopPage(itemId) {\r\n    return {\r\n      type: \"FETCH_LAPTOP_PAGE\",\r\n      payload: {\r\n        item: data.Laptop.find(elem=>elem.id === itemId.toString())\r\n      }\r\n    }\r\n  }\r\n\r\n  export function fetchItemOrder(itemInfo) {\r\n    return {\r\n      type: \"FETCH_ITEM_ORDER\",\r\n      payload: {\r\n       item:itemInfo\r\n      }\r\n    }\r\n  }\r\n\r\n  export function fetchLaptopInfo() {\r\n    return {\r\n      type: \"FETCH_LAPTOP_INFO\",\r\n      payload:data.LaptopInfo[0]\r\n    }\r\n  }\r\n\r\n  export function fetchLaptopFilter(activeBrand,activeProcessor,activeRam,activeMemory) {\r\n   \r\n    let laptop = [];\r\n     if (activeBrand.length != 0) {\r\n      for (let brand of activeBrand) {\r\n        let filterLaptop = data.Laptop.filter(elem=>elem.name.toLowerCase() === brand)\r\n        laptop = [...laptop, ...filterLaptop]\r\n      }\r\n    \r\n    } else {\r\n      laptop = [...data.Laptop]\r\n    }\r\n\r\n    let laptopProcessor = []\r\n    if (activeProcessor.length != 0 ) {\r\n      for (let Processor of activeProcessor) {\r\n        let filterProcessor = laptop.filter(elem=>elem.parameter.processor.indexOf(Processor) > -1)\r\n        laptopProcessor = [...laptopProcessor,...filterProcessor]\r\n      }\r\n    } else {\r\n      laptopProcessor = [...laptop]\r\n    }\r\n\r\n    let laptopRam = []\r\n    if (activeRam.length != 0) {\r\n      for (let Ram of activeRam) {\r\n        let filterRam = laptop.filter(elem=>elem.parameter.ram.indexOf(Ram) > -1)\r\n        laptopRam = [...laptopRam,...filterRam]\r\n      }\r\n    } else {\r\n      laptopRam = [...laptopProcessor]\r\n    }\r\n    let laptopMemory = []\r\n    if (activeMemory.length != 0) {\r\n       for (let Memory of activeMemory) {\r\n         let filterMemory = laptopRam.filter(elem=>elem.parameter.memory.indexOf(Memory) > -1)\r\n         laptopMemory = [...laptopMemory, ...filterMemory]\r\n       }\r\n    } else {\r\n      laptopMemory = [...laptopRam]\r\n    }\r\n\r\n    return {\r\n      type: \"FETCH_LAPTOP_FILTER\",\r\n      payload: activeBrand.length == 0 && activeProcessor.length == 0 && activeRam.length == 0 && activeMemory.length == 0 ? data.Laptop : laptopMemory\r\n    }\r\n  }\r\n\r\n  export  function fetchPriceSort() {\r\n   return {\r\n      type:\"FETCH_PRICE_SORT\"\r\n    }\r\n  }\r\n  export function fetchNameSort() {\r\n  \r\n    return {\r\n      type:\"FETCH_NAME_SORT\",\r\n    }\r\n}\r\n\r\n  \r\n     \r\n ","import React, {useState} from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {fetchLaptopFilter} from '../action/laptop'\nexport default function MenuLaptop() {\n const history = useHistory()\n const dispatch = useDispatch()\n const [laptop,setLaptop] = useState(false);\n\n const toggleLaptop = () => {\n  setLaptop(!laptop)\n}\nconst [toggleLaptopBrand,setToggleLaptopBrand] = useState(false);\n\nconst handleSetLaptopBrand = () => {\n  setToggleLaptopBrand(!toggleLaptopBrand)\n   \n}\nconst [laptopParameter,setLaptopParameter] = useState(false);\n\nconst toggleLaptopParameter = () => {\n  setLaptopParameter(!laptopParameter)\n}\n\nconst laptopInfo = useSelector(state=>state.laptop.laptopInfo);\nconst laptopProcessor = laptopInfo.processor;\nconst laptopBrand = laptopInfo.brand;\nconst laptopRam = laptopInfo.ram;\nconst laptopMemory = laptopInfo.memory\n\nconst [activeBrand,setActiveBrand] = useState([])\nconst setBrand = (elem) => {\n let index  = activeBrand.indexOf(elem);\n let str = [...activeBrand];\n str.splice(index,1);\n index !== -1 ? setActiveBrand([...str]) : setActiveBrand([...activeBrand,elem])\n let newActiveBrand = index !== -1 ? [...str] : [...activeBrand,elem]\n dispatch(fetchLaptopFilter(newActiveBrand,activeProcessor,activeRam,activeMemory))\n  history.push({\n    pathname:\"/Laptop\",\n    laptop: newActiveBrand,\n    processor: activeProcessor,\n    ram: activeRam,\n    memory: activeMemory\n  })\n}\n\nconst [activeProcessor,setActiveProcessor] = useState([]);\nconst setProcssor = (elem) => {\n let index  = activeProcessor.indexOf(elem);\n let str = [...activeProcessor];\n str.splice(index,1);\n index !== -1 ? setActiveProcessor([...str]) : setActiveProcessor([...activeProcessor,elem]);\n let newActiveProcessor = index !== -1 ? [...str] : [...activeProcessor,elem];\n dispatch(fetchLaptopFilter(activeBrand,newActiveProcessor,activeRam,activeMemory))\n history.push({\n  pathname:\"/Laptop\",\n  laptop: activeBrand,\n  processor: newActiveProcessor,\n  ram: activeRam,\n  memory: activeMemory\n})\n}\n\nconst [activeRam,setActiveRam] = useState([])\nconst setRam = (elem) => {\n  let index = activeRam.indexOf(elem);\n  let str = [...activeRam];\n  str.splice(index,1);\n  index !== -1 ? setActiveRam([...str]) : setActiveRam([...activeRam,elem])\n  let newActiveRam = index !== -1 ? [...str] : [...activeRam,elem]\n  dispatch(fetchLaptopFilter(activeBrand,activeProcessor,newActiveRam,activeMemory))\n  history.push({\n    pathname:\"/Laptop\",\n    laptop: activeBrand,\n    processor: activeProcessor,\n    ram: newActiveRam,\n    memory: activeMemory\n  })\n}\n\nconst [activeMemory,setActiveMemory] = useState([])\n const setMemory = (elem) => {\n   let index  = activeMemory.indexOf(elem);\n   let str = [...activeMemory];\n   str.splice(index,1);\n   index !== -1 ? setActiveMemory([...str]) : setActiveMemory([...activeMemory,elem])\n   let newActiveMemory = index !== -1 ? [...str] : [...activeMemory,elem]\n   dispatch(fetchLaptopFilter(activeBrand,activeProcessor,activeRam,newActiveMemory))\n   history.push({\n    pathname:\"/Laptop\",\n    laptop: activeBrand,\n    processor: activeProcessor,\n    ram: activeRam,\n    memory: newActiveMemory\n  })\n}\n    return (\n        <>\n          <button  className=\"LaptopListButton\">\n                   <h1>Laptop</h1> \n                   <span onClick={toggleLaptop}>&#10097;</span> \n          </button>\n             <div className=\"laptopListParameter\">\n               {laptop && \n               <h2 className=\"laptopBrandsTitle\">\n                <span>Brands</span><button onClick={handleSetLaptopBrand}>&#x21E8;</button>\n               </h2>\n              }\n              { toggleLaptopBrand && laptop &&\n               <div className=\"laptopBrands\">\n                <ul>\n                 {Object.keys(laptopBrand).map((elem,id)=>{\n                return(\n                  <li key={id} className={activeBrand.indexOf(elem) !== -1 ? \"active\" : \"\"} onClick={()=>setBrand(elem)} >\n                    <img src={laptopBrand[elem]} width=\"35px\" height=\"25px\" alt=\"\"/>\n                  </li>)   \n                })}   \n               </ul>\n             </div>\n            }\n            {laptop && \n             <h2 className=\"laptopParameterTitle\">\n               <span>Parameter</span><button onClick={toggleLaptopParameter}>&#x21E8;</button>\n            </h2>}\n               {laptopParameter && laptop && <div className=\"laptopParameter\">\n               <h4>Processor:</h4>\n                 <ul>\n                   {laptopProcessor.map((elem,id)=>{\n                     return(\n                     <li key={id} className={activeProcessor.indexOf(elem) !== -1 ? \"active\" : \"\"} onClick={()=>setProcssor(elem)}>{elem}</li>\n                     )\n                   })}\n                 </ul>\n                <h4>Ram:</h4>\n               <ul>\n               {laptopRam.map((elem,id)=>{\n                return(\n                 <li key={id} className={activeRam.indexOf(elem) !== -1 ? \"active\" : \"\"} onClick={()=>setRam(elem)}>{elem}</li>\n                )   \n               })}   \n              </ul>\n              <h4>Memory:</h4>\n              <ul>\n               {laptopMemory.map((elem,id)=>{\n                return(\n                <li key={id} className={activeMemory.indexOf(elem) !== -1 ? \"active\" : \"\"} onClick={()=>setMemory(elem)}>{elem}</li>\n                  )   \n                 })}   \n               </ul>\n              </div>} \n            </div>  \n        </>\n    )\n}","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {fetchPhoneFilter} from '../action'\r\nexport default function MenuPhone() {\r\n    const [phone,setPhone] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    \r\nconst togglePhone = () => {\r\n    setPhone(!phone)\r\n}\r\n\r\nconst [togglePhoneBrand,setTogglePhoneBrand] = useState(false);\r\n\r\nconst handleSetPhoneBrand = () => {\r\n  setTogglePhoneBrand(!togglePhoneBrand)\r\n   \r\n}\r\n\r\nconst [phoneParameter,setPhoneParameter] = useState(false);\r\n\r\nconst togglePhoneParameter = () => {\r\n  setPhoneParameter(!phoneParameter)\r\n}\r\n\r\nconst phoneInfo = useSelector(state=>state.phone.phoneInfo);\r\n const phoneBrand = phoneInfo.brand;\r\nconst phoneRam = phoneInfo.ram;\r\nconst phoneMemory = phoneInfo.memory\r\n\r\nconst [activeBrand,setActiveBrand] = useState([]);\r\nconst [activeRam,setActiveRam] = useState([]);\r\n\r\nconst setBrand =  (id) => {\r\n let index = activeBrand.indexOf(id);\r\n let str = [...activeBrand];\r\n  str.splice(index,1);\r\n  \r\n   index !== -1 ? setActiveBrand([...str]) : setActiveBrand([...activeBrand,id])\r\n   let newActiveBrand = index !== -1 ? [...str] : [...activeBrand,id]\r\n   \r\n   dispatch(fetchPhoneFilter(newActiveBrand,activeRam,activeMemory))\r\n   history.push({\r\n     \"pathname\": '/Phone',\r\n     \"phone\": newActiveBrand,\r\n     \"ram\": activeRam,\r\n     \"memory\": activeMemory  \r\n   })\r\n }\r\n \r\n\r\nconst setRam =  (id) => {\r\n\r\n  let index = activeRam.indexOf(id);\r\n  let str = [...activeRam];\r\n   str.splice(index,1);\r\n  \r\n  index != -1 ? setActiveRam([...str]) : setActiveRam([...activeRam,id])\r\n  let newActiveRam = index !== -1 ? [...str] : [...activeRam,id];\r\n  dispatch(fetchPhoneFilter(activeBrand,newActiveRam,activeMemory))\r\n  history.push({\r\n    \"pathname\": '/Phone',\r\n     \"phone\": activeBrand,\r\n     \"ram\": newActiveRam,\r\n     \"memory\": activeMemory  \r\n   })\r\n\r\n }\r\n\r\n const [activeMemory,setActiveMemory] = useState([])\r\n\r\n const setMemory =  (id) => {\r\n  let index = activeMemory.indexOf(id);\r\n  let str = [...activeMemory];\r\n  str.splice(index,1);\r\n   index !== -1 ? setActiveMemory([...str]) : setActiveMemory([...activeMemory,id])\r\n let newActiveMemory = index !== -1 ? [...str] : [...activeMemory,id];\r\n\r\n  dispatch(fetchPhoneFilter(activeBrand,activeRam,newActiveMemory))\r\n  history.push({\r\n   \"pathname\": '/Phone',\r\n    \"phone\": activeBrand,\r\n    \"ram\": activeRam,\r\n    \"memory\": newActiveMemory  \r\n  })\r\n }\r\n \r\n    return (\r\n        <>\r\n         <button  className=\"PhoneListButton\">\r\n                   <h1>Phone</h1> \r\n                   <span onClick={togglePhone}>&#10097;</span> \r\n             </button>  \r\n              <div className=\"phoneListParameter\">\r\n               {phone && \r\n               <h2 className=\"phoneBrandsTitle\">\r\n                <span>Brands</span><button onClick={handleSetPhoneBrand}>&#x21E8;</button>\r\n               </h2>\r\n              }\r\n              { togglePhoneBrand && phone &&\r\n               <div className=\"phoneBrands\">\r\n                <ul>\r\n                 {Object.keys(phoneBrand).map((elem,i)=>{\r\n                return(\r\n                  <li className={activeBrand.indexOf(elem) !== -1 ? \"active\" : \"\"} key={i} onClick={()=>setBrand(elem)}>\r\n                    <img src={phoneBrand[elem]} width=\"25px\" height=\"25px\" alt=\"\"/>\r\n                  </li>)   \r\n                })}   \r\n               </ul>\r\n             </div>\r\n            }\r\n            {phone && \r\n             <h2 className=\"phoneParameterTitle\">\r\n               <span>Parameter</span><button onClick={togglePhoneParameter}>&#x21E8;</button>\r\n            </h2>}\r\n               {phoneParameter && phone && <div className=\"phoneParameter\">\r\n                <h4>Ram:</h4>\r\n               <ul>\r\n               {phoneRam.map((elem,id)=>{\r\n                return(\r\n                <li key={id} className={activeRam.indexOf(elem) !== -1 ? \"active\" : \"\"}  onClick={()=>setRam(elem)}>{elem}</li>\r\n                )   \r\n               })}   \r\n              </ul>\r\n              <h4>Memory:</h4>\r\n              <ul>\r\n               {phoneMemory.map((elem,id)=>{\r\n                return(\r\n                <li key={id} className={activeMemory.indexOf(elem) !== -1 ? \"active\" : \"\" } onClick={()=>setMemory(elem)}>{elem}</li>\r\n                )   \r\n               })}   \r\n              </ul>\r\n              </div>} \r\n            </div>   \r\n        </>\r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {fetchItemSearch,fetchPhoneInfo,fetchPhoneFilter} from '../action'\r\nimport {fetchLaptopInfo} from '../action/laptop'\r\nimport MenuLaptop from './MenuLaptop'\r\nimport MenuPhone from './MenuPhone'\r\nimport data from '../JSONSERVER/db.json'\r\nfunction Header() {\r\n  useEffect(()=>{\r\n      dispatch(fetchPhoneInfo())\r\n      dispatch(fetchLaptopInfo())\r\n    })\r\n\r\nconst [search,setSearch] = useState()\r\nconst handleChange = (e) => {\r\n    setSearch(e.target.value)\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(fetchItemSearch(search))\r\n    history.push('/Search')\r\n}\r\n\r\nconst history =  useHistory();\r\nconst handlGoBack = () => {\r\n history.goBack()\r\n}\r\nconst location = useLocation();\r\nconst locationPathName = location.pathname\r\n\r\nconst handleHomePage = () => {\r\n    history.push('/')\r\n}\r\n\r\nconst handleOrderPage = () => {\r\n    history.push('/order')\r\n}\r\n\r\nconst toggleChange = () => {\r\n  setToggle(!toggle)\r\n}\r\n const [toggle,setToggle] = useState(false);\r\n const [phoneData,setPhoneData] = useState(data.Phone);\r\n const [laptopData,setLaptopData] = useState(data.Laptop);\r\n const item = useSelector(state=>state.phone.menuListItem)\r\n const dispatch = useDispatch();\r\n const Count = useSelector(state=>state.phone.orderCount)\r\n \r\n const [togglesearch,setToggleSearch] = useState(false)\r\n const toggleSearch = () => {\r\n  setToggleSearch(!togglesearch)\r\n  \r\n  if (search) {\r\n    dispatch(fetchItemSearch(search))\r\n    history.push('/Search')\r\n  }\r\n  document.getElementsByClassName('search')[0].classList.toggle('active')\r\n}\r\n\r\n\r\n    return (\r\n        <>\r\n         { toggle && <div className=\"menuList\">\r\n         <button className=\"Close\" onClick={toggleChange}>X</button>\r\n             <MenuPhone />\r\n            <MenuLaptop />\r\n          </div>\r\n          } \r\n        \r\n        <div className=\"Header\" >\r\n            <div className=\"menu\" >\r\n                <img width=\"60px\" height=\"70px\" src=\"https://goodmade.ru/upload/000/u1/101/39aadfae.png\" alt=\"menu\"  onClick={toggleChange}/>\r\n               <h1 onClick={handleHomePage} className={togglesearch ? 'active': \"\"} id=\"logo\">My Amazon Store</h1>\r\n        </div>\r\n           \r\n            <form className=\"search\" onSubmit={handleSubmit}>\r\n              <input className={togglesearch ? 'active': \"\"} name=\"search\" type=\"text\" onChange={handleChange} />\r\n              <input className={togglesearch ? 'active': \"\"} name=\"searchButton\" type=\"submit\" value=\"\"/>\r\n            </form>\r\n\r\n         <div className=\"Order_Search\">\r\n              <button className=\"SearchButton\" id=\"SearchButton\" onClick={toggleSearch}></button>\r\n            <div className=\"orderList\" onClick={handleOrderPage}>\r\n             <button className=\"order\">\r\n               {Count !== 0 &&<span className=\"orderCount\">{Count}</span>}\r\n             </button>\r\n           </div>\r\n         </div>\r\n            \r\n\r\n        </div>\r\n      {\r\n      locationPathName !== '/' && <div className=\"goBack\" onClick={handlGoBack}>\r\n        <button></button>\r\n      </div>\r\n      }\r\n        \r\n       </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nexport default function Item() {\r\n   const history = useHistory();\r\n   const handlePhoneClick = () => {\r\n      history.push('/Phone')\r\n   }\r\n   const handleLaptopClick = () => {\r\n      history.push('/Laptop')\r\n   }\r\n    return (\r\n       <div className=\"Items\">\r\n        <div className=\"ItemPhone\" onClick={handlePhoneClick}>\r\n         <img src=\"https://www.newsytribune.com/wp-content/uploads/2020/07/Best-Budget-Phone-Under-200.jpg\" width=\"400px\" height=\"400px\" alt=\"Phone item\" />\r\n        </div>\r\n\r\n        <div className=\"ItemLaptop\" onClick={handleLaptopClick}>\r\n        <img src=\"https://api.time.com/wp-content/uploads/2017/05/laptops.jpg\" width=\"400px\" height=\"400px\" alt=\"Laptop item\" />\r\n        </div>\r\n\r\n        </div> \r\n     )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useLocation} from 'react-router-dom'\r\nimport { fetchItemLaptop,fetchPriceSort,fetchNameSort,fetchLaptopFilter } from '../action/laptop';\r\n\r\nexport default function Laptop() {\r\n    // const location = useLocation()\r\n    // console.log(location);\r\n    const Laptop = useSelector(state => state.laptop.itemsLaptop);\r\n    const dispatch = useDispatch();\r\n    const param = useLocation()\r\n    let [mounted,setMounted] = useState()\r\n\r\n    useEffect(() => {\r\n      if (!mounted) {\r\n        dispatch(fetchItemLaptop())\r\n      }\r\n       (param.laptop || param.processor || param.ram || param.memory) && dispatch(fetchLaptopFilter(param.laptop,param.processor,param.ram,param.memory))\r\n    }, [])\r\n    \r\n    let history = useHistory()\r\n    const handleClick = (item) => {\r\n      history.push(`/ItemLaptop/${item.id}`)\r\n    }\r\n    const handleSort = (e) => {\r\n      if (e.target.value == 'Price') {\r\n        dispatch(fetchPriceSort())\r\n      } else if (e.target.value == 'Name') {\r\n        dispatch(fetchNameSort())\r\n      } else if (e.target.value == 'All') {\r\n        dispatch(fetchItemLaptop())\r\n      }\r\n    }\r\n    return (\r\n        <div className=\"Laptop\">\r\n            <div className=\"LaptopSort\">\r\n                <select onClick={handleSort}>\r\n                    <option>Default</option>\r\n                    <option>All</option>\r\n                    <option>Name</option>\r\n                    <option>Price</option>\r\n                </select>\r\n            </div>\r\n           {Laptop.map(item=> {\r\n            return (\r\n                <div className=\"LaptopItem\" key={item.id} onClick={()=>handleClick(item)}>\r\n                    <h1>{item.name} {item.model}</h1>\r\n                     <img src={item.img} width=\"200px\" height=\"200px\" alt={`Phone Image ${item.id}`} />\r\n                </div>   \r\n            )\r\n          })}\r\n        \r\n          \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState,useEffect} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {useHistory, useLocation} from \"react-router-dom\"\r\nimport {fetchItemsPhone,fetchPriceFilter,fetchFilterName,fetchPhoneFilter} from '../action'\r\n\r\nexport default function Item() {\r\n  let param = useLocation();\r\n  \r\n  const phone = useSelector(state => state.phone.itemsPhone);\r\n  const dispatch = useDispatch();\r\n  const [mounted,setMounted] = useState(false);\r\n  \r\n useEffect(() => {\r\n   if (!mounted) {\r\n    dispatch(fetchItemsPhone())\r\n    setMounted(true)\r\n   }\r\n  (param.phone || param.ram || param.memory) && dispatch(fetchPhoneFilter(param.phone,param.ram,param.memory))\r\n  },[mounted])\r\n\r\n  const history = useHistory()\r\n   const handleClick = (item) => {\r\n    history.push(`/ItemPhone/${item.id}`)\r\n   }  \r\n   \r\n  \r\n const [sortItem,setSortItem] = useState(\"\");\r\n   const handleSortItem = (e) => {\r\n    if (e.target.value == \"Price\") {\r\n       dispatch(fetchPriceFilter(e.target.value))\r\n     } else if (e.target.value == \"Name\") {\r\n       dispatch(fetchFilterName(e.target.value))\r\n     } else if (e.target.value == \"All\") {\r\n       dispatch(fetchItemsPhone())\r\n     }\r\n   }\r\n    \r\n   \r\n   \r\n    return (\r\n       <div className=\"Phone\">\r\n         <div className=\"PhoneFilter\">\r\n           <select onChange={handleSortItem}>\r\n             <option>Default</option>\r\n             <option>All</option>\r\n             <option>Price</option>\r\n             <option>Name</option>\r\n          </select>\r\n         </div>\r\n        <div className=\"PhoneCentre\">\r\n          {phone.map(item=> {\r\n           \r\n           return (\r\n               <div key={item.id} className = \"PhoneItem\"  onClick={()=>handleClick(item)}>\r\n                   \r\n           <h1>{item.name} {item.model}</h1>\r\n                   <img   src={item.img} width=\"200px\" height=\"200px\" alt={`Phone Image ${item.id}`} />\r\n                   <h1>{item.price[0]}$</h1>\r\n                  \r\n               </div>\r\n               \r\n           )\r\n            })}\r\n        </div>\r\n    </div> \r\n     )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { useHistory, useParams} from 'react-router-dom'\r\nimport {fetchItemOrder,fetchItemPhone} from '../action/index'\r\nexport default function ItemPhone() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    let params = useParams();\r\n    let itemId = params.itemId;\r\n \r\n    useEffect(()=>{\r\n        dispatch(fetchItemPhone(itemId))\r\n        return () => {\r\n           \r\n        }\r\n    },[itemId])\r\n    \r\n    let item = useSelector(state => state.phone.itemPhone);\r\n   \r\n    const [count,setCount] = useState(1);\r\n    const ram =item.parameter.ram;\r\n    const memory = item.parameter.memory;\r\n\r\n   let [Price,setPrice] = useState();\r\n   \r\n  const AvailableColors = Object.values(item.parameter.AvailableColors);\r\n  \r\n   const increment = () => {\r\n        setCount(count + 1)\r\n        setPrice(Number(activeColor*50)+(Number(activeMemory*20)+Number(item.price[activeRam]))*(count+1))\r\n    } \r\n\r\n    const decrement = () => {\r\n        if (count > 1) {\r\n\r\n            setCount(count - 1)\r\n            setPrice(Number(activeColor*50)+(Number(activeMemory*20)+Number(item.price[activeRam]))*(count-1))\r\n     \r\n        }\r\n        \r\n    } \r\n   \r\n\r\n\r\n   const handleOrderClick = () => {\r\n       Color = Color === '' ? item.parameter.color : Color;\r\n       Ram = Ram === '' ? ram[0] : Ram;\r\n       Memory = Memory === '' ? memory[0] : Memory;\r\n       Price = Price === undefined ? item.price[0] : Price;\r\n\r\n    let itemInfo = {\r\n        \"id\":item.id,\r\n        \"count\":count,\r\n        \"name\": item.name,\r\n        \"model\": item.model,\r\n        \"img\": item.Colors[Color],\r\n        \"color\": Color,\r\n        \"ram\": Ram,\r\n        \"memory\":Memory,\r\n        \"price\": Price\r\n    }\r\n    \r\n   dispatch(fetchItemOrder(itemInfo))\r\n     history.push('/Order')\r\n   } \r\n   \r\n  \r\nlet [Color,setColor] = useState(\"\")\r\nlet [Ram,setRam] = useState(\"\");\r\nlet [Memory,setMemory] = useState(\"\");\r\n\r\nconst [activeRam,setActiveRam] = useState(0);\r\nconst [activeMemory,setActiveMemory] = useState(0);\r\n\r\nconst [activeColor,setActiveColor] = useState(0);\r\n\r\nconst handleSetRam = (elem,id) => {\r\n    setRam(elem);\r\n    setPrice(Number(activeColor*50)+Number(activeMemory*20)+Number(item.price[id])*count)\r\n    setActiveRam(id)\r\n}\r\n\r\nconst handleSetMemory = (elem,id) => {\r\n    setMemory(elem);\r\n    setActiveMemory(id)\r\n    setPrice(Number(activeColor*50)+Number(id*20)+Number(item.price[activeRam])*count)\r\n}\r\n\r\nconst handleSetColor = (elem,id) => {\r\n    setColor(elem)\r\n    setActiveColor(id)\r\n    setPrice(Number(id*50)+Number(activeMemory*20)+Number(item.price[activeRam])*count)\r\n}\r\n\r\n \r\n    return (\r\n        <div className=\"PhoneConatiner\">\r\n            <div className=\"PhoneConatinerCenter\">\r\n                <div className=\"PhoneImageNav\">\r\n                <img width=\"350px\" height=\"400px\" src={ Color? item.Colors[Color] : item.img}  alt=\"PhoneImg\"/>\r\n            </div> \r\n                <div className=\"PhoneConatinerParameter\">\r\n                    <div className=\"PhonePrice\">\r\n                <h1>{item.name}</h1>\r\n                <h1>{item.model}</h1>\r\n               <h1>Price: {Price == undefined ? item.price[0]: Price}$</h1>\r\n               <button onClick={decrement}>-</button>\r\n               {count}\r\n               <button onClick={increment}>+</button>  \r\n                </div>\r\n               <hr />\r\n               <div className=\"PhoneParameter\">\r\n               <h4 className= \"PhoneRam\"><span>Ram:</span> {ram.map((item,id)=> {\r\n                  return(\r\n                   <li key={id} className = {activeRam == id ? \"active\": \"\"} onClick={()=>handleSetRam(item,id)}>{item}</li>\r\n                  )\r\n              })}</h4>\r\n\r\n              <h4 className=\"PhoneMemory\"> <span>Memory:</span> {memory.map((item,id)=> {\r\n                  return(\r\n                  <li key={id} className = {activeMemory === id ? \"active\": \"\"} onClick={()=>handleSetMemory(item,id)}>{item}</li>\r\n                  )\r\n              })}</h4> \r\n               <h4>Announcement Year: {item.parameter.year}</h4>\r\n               <h4>Color: {Color? Color : item.parameter.color}</h4>\r\n            <h4 className=\"PhoneAvailableColors\"><span>Available Color: </span>{AvailableColors.map((item,id)=> {\r\n                return(\r\n                    <li key={id} className={activeColor == id ? \"active\" : \"\"} onClick={()=>handleSetColor(item,id)} style={{backgroundColor:`${item}`}}></li>\r\n                )\r\n            })}</h4>\r\n               </div>\r\n              \r\n               <button className=\"PhoneBuy\" onClick={handleOrderClick}>\r\n                  <span className=\"ico\"></span> \r\n                  <p className=\"icoText\">Buy</p>\r\n              </button> \r\n              \r\n             </div>\r\n               \r\n             </div>   \r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { MemoryRouter, useHistory, useParams } from 'react-router-dom'\r\nimport {fetchLaptopPage,fetchItemOrder} from '../action/laptop'\r\n\r\nexport default function ItemLaptop() {\r\n   \r\n    let param = useParams()\r\n    let itemId = param.itemId\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        dispatch(fetchLaptopPage(itemId))\r\n        \r\n    },[itemId])\r\n    \r\n    let item = useSelector(state => state.laptop.itemLaptop);\r\n    \r\n    const [count,setCount] = useState(1);\r\n    const price = parseInt(item.price) * count;\r\n    const [Price,setPrice] = useState()\r\n    const increment = () => {\r\n        setCount(count + 1)\r\n       setPrice((Number(activeMemory*150) + Number(activeRam*100) + Number(activeColor*50) + Number(item.price[activeProcessor]))*(count+1))\r\n    }\r\n\r\n    const decrement = () => {\r\n        if (count > 1) {\r\n            setCount(count - 1)\r\n            setPrice(Number(activeMemory*150) + Number(activeRam*100) + Number(activeColor*50) + Number(item.price[activeProcessor]*(count-1)))\r\n        }\r\n    }\r\n    let processor = item.parameter.processor\r\n    let ram = item.parameter.ram\r\n    let memory = item.parameter.memory\r\n    let availableColors = Object.values(item.parameter.AvailableColors)\r\n    let [Color,setColor] = useState()\r\n    let [activeProcessor,setActiveProcessor] = useState(0)\r\n    let [activeRam,setActiveRam] = useState(0)\r\n    let [activeMemory,setActiveMemory] = useState(0)\r\n    let [activeColor,setActiveColor] = useState(0);\r\n    let [Processor,setProcessor] = useState(\"\");\r\n    let [Ram,setRam] = useState(\"\");\r\n    let [Memory,setMemory] = useState(\"\")\r\n\r\n    const handleSetProcessor = (elem,id) => {\r\n        setActiveProcessor(id)\r\n        setPrice((Number(activeMemory*150)+Number(activeRam*100)+Number(activeColor*50)+Number(item.price[id]))*count)\r\n    }\r\n\r\n   const handleSetRam = (elem,id) => {\r\n       setActiveRam(id)\r\n       setPrice((Number(id*100) + Number(item.price[activeProcessor]) + Number(activeMemory*150) + Number(activeColor*50))*count)\r\n    }\r\n\r\n   const handleSetMemory = (elem,id) => {\r\n       setActiveMemory(id)\r\n       setPrice((Number(id*150) + Number(activeRam*100) + Number(activeColor*50) + Number(item.price[activeProcessor]))*count)\r\n    }\r\n /*\r\n \r\n  gimarman jamanak color - i gin@ chi ashxatum\r\n  \r\n  */\r\n   const handleSetColor = (elem,id) =>{\r\n       setColor(elem)\r\n       setActiveColor(id)\r\n       setPrice((Number(id*50) + Number(activeRam*100) + Number(activeMemory*150) + Number(item.price[activeProcessor]))*count)\r\n    }\r\n\r\n   const handleOrderClick = ()=>{\r\n       console.log();\r\n      \r\n       let itemInfo = {\r\n          \"id\":item.id,\r\n           \"count\":count,\r\n           \"name\": item.name,\r\n           \"img\": item.Colors[Color] == undefined ? item.img : item.Colors[Color],\r\n           \"color\": Color == undefined ? item.parameter.color: Color,\r\n           \"processor\": Processor == '' ? processor[0] : Processor,\r\n           \"ram\": Ram == '' ? ram[0]: Ram,\r\n           \"memory\": Memory == '' ? memory[0]: Memory,\r\n           \"price\": Price == undefined ? price : Price  \r\n       }\r\n     dispatch(fetchItemOrder(itemInfo))\r\n     history.push('/Order')\r\n   }\r\n    return (\r\n        <div className=\"LaptopConatiner\">\r\n            <div className=\"LaptopConatinerCenter\">\r\n                <div className=\"LaptopImageNav\">\r\n                <img width=\"500px\" height=\"450px\" src={Color? item.Colors[Color] : item.img}  alt=\"LaptopImg\"/>\r\n                </div>\r\n                <div className=\"LaptopConatinerParameter\">\r\n                  <h1>{`${item.name} ${item.model}`}</h1>\r\n               <div className=\"LaptopPrice\">\r\n                 <h1>Price: {Price == undefined ? price : Price}$</h1>\r\n                 <button onClick={decrement}>-</button>\r\n                 {count}\r\n                 <button onClick={increment}>+</button>  \r\n               </div>\r\n               <hr />\r\n               <div className=\"LaptopParameter\">\r\n                   <div className=\"LaptopProcessor\">\r\n                   <h4> <span>Processor:</span>  {processor.map((elem,id)=>{\r\n                           return(\r\n                           <li key={id} className={activeProcessor == id ? \"active\" : \"\"} onClick={()=>handleSetProcessor(elem,id)}>{elem}</li>\r\n                           )\r\n                         })}\r\n                      </h4>  \r\n                   </div>\r\n                   <div className=\"LaptopRam\">\r\n                       <h4> <span>Ram:</span>  {ram.map((elem,id)=>{\r\n                           return(\r\n                           <li key={id} className={activeRam == id ? \"active\" : \"\"} onClick={()=>handleSetRam(elem,id)}>{elem}</li>\r\n                           )\r\n                         })}\r\n                      </h4>\r\n                   </div>\r\n\r\n                   <div className=\"LaptopMemory\">\r\n                       <h4> <span>Memory:</span>  {memory.map((elem,id)=>{\r\n                           return(\r\n                           <li key={id} className={activeMemory == id ? \"active\" : \"\"} onClick={()=>handleSetMemory(elem,id)}>{elem}</li>\r\n                           )\r\n                         })}\r\n                      </h4>\r\n                   </div>\r\n              <h4 className=\"Year\">Announcement Year: {item.parameter.year}</h4>\r\n              <h4 className=\"Color\">Color: {Color ? Color :item.parameter.color}</h4>\r\n              <h4 className=\"PhoneAvailableColors\"><span>Available Color: </span>{availableColors.map((item,id)=> {\r\n                return(\r\n                    <li className={activeColor == id ? \"active\" : \"\"} key={id} style={{backgroundColor:`${item}`}} onClick={()=>handleSetColor(item,id)}></li>\r\n                  )\r\n                })}</h4>\r\n              </div>\r\n               <button className=\"LaptopBuy\">\r\n                  <span className=\"ico\"></span> \r\n                  <p className=\"icoText\" onClick={handleOrderClick}>Buy</p>\r\n              </button>\r\n                </div>\r\n               \r\n             </div>   \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchItemRemove } from '../action';\r\n\r\n\r\nexport default function Order() {\r\n   let dispatch = useDispatch();\r\n   const items = useSelector(state=>state.phone.newPhoneItem);\r\n   const Price = useSelector(state=>state.phone.orderPrice)\r\n   const Count = useSelector(state=>state.phone.orderCount)\r\n   const RemoveItem = (item) => {\r\n      //console.log(item);\r\n     dispatch(fetchItemRemove(item))\r\n   }\r\n   \r\n   \r\n   \r\n   return (\r\n        <div className=\"OrderContainer\">\r\n           <div className=\"OrderCenterContainer\">\r\n           <h1>Your Items {Count}</h1>\r\n           <h1>{items.length === 0 && \"No Items Found\"}</h1>\r\n           {\r\n             items.map((item,id)=> {\r\n               return(\r\n                  <div className=\"OrderItem\" key={id}>\r\n                  <div className=\"OrderImg\">\r\n                     <img src={item.img} width=\"150px\" height=\"170px\" alt=\"Img\" />\r\n                  </div>\r\n                 <div className=\"OrderParameter\">\r\n                 <h1>{item.name} {item.model}</h1>\r\n                 <h3>Ram: {item.ram}</h3>\r\n                 <h3>Memory:{item.memory}</h3>\r\n                 <h3>Color: {item.color}</h3>\r\n                  <h3>Price: {item.price}$</h3>\r\n                  <h3>Count: {item.count} </h3>\r\n           <div className=\"Buy_Delete\">\r\n                  <div className=\"Buy\">\r\n                 <button className=\"PhoneBuy\" >\r\n                  <span className=\"ico\"></span> \r\n                  <p className=\"icoText\">Buy</p>\r\n                 </button>\r\n              </div>\r\n              <div className=\"Remove\" onClick={()=>RemoveItem(item)}>\r\n                 <button className=\"PhoneDelete\" >\r\n                  <span className=\"icoDelete\"></span> \r\n                  <p className=\"icoDeleteText\">Remove</p>\r\n                 </button>\r\n              </div>\r\n         </div>\r\n             </div>\r\n             \r\n\r\n              </div>\r\n               )\r\n             })\r\n           }\r\n            {items.length !== 0 && <h2>Total: ${Price}</h2> } \r\n           </div> \r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction Search() {\r\n    const item = useSelector(state=>state.phone.searchItem)\r\n    const history = useHistory();\r\n    \r\n  const handleClick = (item) => {\r\n    (item.type === \"phone\") ? history.push(`/ItemPhone/${item.id}`) : history.push(`/ItemLaptop/${item.id}`)\r\n  }\r\n  \r\n    return (\r\n       <>\r\n       { (item.length !== 0 || item.length !== '') ?  <div className=\"SearchContainer\">\r\n         {item.map(item=> {\r\n             return (\r\n                 <div className = \"SearchItem\" key={item.id} onClick={()=>handleClick(item)}>\r\n                     \r\n             <h1>{item.name} {item.model}</h1>\r\n                     <img src={item.img} width=\"200px\" height=\"200px\" alt={`Phone Image ${item.id}`} />\r\n                     <h1>{item.price[0]}$</h1>\r\n                    \r\n               </div>\r\n                 \r\n             )\r\n         })}\r\n          \r\n\r\n        </div> : <h1 className=\"SearchError\">Not found Item</h1> }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useEffect } from 'react';\nimport Header from './components/Header'\nimport Item from './components/Item'\nimport Laptop from './components/Laptop'\nimport Phone from './components/Phone'\nimport ItemPhone from './components/ItemPhone'\nimport ItemLaptop from './components/ItemLaptop'\nimport Order from './components/Order'\nimport Search from './components/Search'\nimport { BrowserRouter as Router,Route} from 'react-router-dom'\nimport {fetchTotalItem} from './action'\nimport './App.css';\nimport { useDispatch } from 'react-redux';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTotalItem())\n  }, [])\n  return (\n    <div className=\"App\">\n   \n    <Router>\n    <Header />\n     <div>\n       <Route exact path=\"/\" component={Item}/>\n       {/* <Route exact path=\"/davit2001.github.io/Store/\" component={Item}/> */}\n       <Route path=\"/Phone\" component={Phone}/>\n       <Route path=\"/Item\" component={Item}/>\n       <Route  path=\"/Laptop\" component={Laptop}/>\n       <Route path=\"/ItemPhone/:itemId\" component={ItemPhone}/>\n       <Route path=\"/ItemLaptop/:itemId\" component={ItemLaptop}/>\n       <Route path=\"/Order\" component={Order}/>\n       <Route path=\"/Search\" component={Search} />\n     </div>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","import data from '../JSONSERVER/db.json'\r\n\r\nconst inititalState = {\r\n    itemsPhone: [],\r\n    itemPhone:  {\r\n        \"id\": \"\",\r\n        \"name\": \"\",\r\n        \"model\": \"\",\r\n        \"img\": \"\",\r\n        \"Colors\": {},\r\n        \"parameter\": {\r\n          \"ram\": [],\r\n          \"memory\": [],\r\n          \"year\":\"\",\r\n          \"color\": \"\",\r\n          \"AvailableColors\": {}\r\n        },\r\n        \"price\": []\r\n      },\r\n    newPhoneItem:[],\r\n    menuListItem:[],\r\n    totalItem:[],\r\n    searchItem:[],\r\n    phoneInfo: {},\r\n    orderPrice:0,\r\n    orderCount:0,\r\n}\r\n\r\nconst itemReducer = (state = inititalState,action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_ITEM_BEGIN': {\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n        }\r\n\r\n        case 'FETCH_ITEMS_PHONE': \r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            itemsPhone: action.payload.item,\r\n        }\r\n\r\n        case \"FETCH_ITEM_PHONE\": \r\n        return {\r\n            ...state,\r\n            itemPhone: action.payload.item\r\n        }\r\n        \r\n        case \"FETCH_ITEM_ORDER\": \r\n        let newState = state\r\n        state.orderPrice += Number(action.payload.item.price)\r\n       state.orderCount += action.payload.item.count\r\n        let index = state.newPhoneItem.findIndex(elem=>elem.price == action.payload.item.price)\r\n        if(index !== -1) {\r\n            state.orderCount += Number(newState.newPhoneItem[index].count)\r\n            newState.newPhoneItem[index].count++\r\n         } else {\r\n            newState.newPhoneItem.push(action.payload.item) \r\n        }  \r\n         return {\r\n            ...newState,\r\n         }\r\n        \r\n        case \"FETCH_TOTAL_ITEM\":\r\n         return {\r\n             ...state,\r\n             totalItem: action.payload\r\n         }   \r\n   case \"FETCH_ITEM_REMOVE\":\r\n       state.orderPrice -= Number(action.payload.price)\r\n       state.orderCount -= action.payload.count\r\n   return {\r\n       ...state,\r\n       newPhoneItem:state.newPhoneItem.filter((x)=>  x.price  !== action.payload.price)\r\n    }\r\n    case \"FETCH_ITEM_SEARCH\": \r\n    return {\r\n        ...state,\r\n        searchItem: action.payload\r\n    }\r\n    case \"FETCH_PHONE_INFO\":\r\n      return {\r\n          ...state,\r\n          phoneInfo:action.payload\r\n      }  \r\n    case \"FETCH_PHONE_FILTER\":\r\n        let newArray = []; \r\n\t\tlet uniqueObject = {}; \r\n        \r\n        for (let i in action.payload ) { \r\n          let objTitle = action.payload[i]['id']; \r\n          uniqueObject[objTitle] = action.payload[i];\r\n        } \r\n        \r\n        for (let i in uniqueObject) { \r\n             newArray.push(uniqueObject[i]); \r\n        } \r\n        return {\r\n            ...state,\r\n            itemsPhone: newArray\r\n        }  \r\n    \r\n    case \"FETCH_PHONE_MEMORY\":\r\n        let phoneMemory = [];\r\n        let phoneItem = [...state.itemsPhone];\r\n         action.payload.map(item=>{\r\n            let filterMemory = state.itemsPhone.filter((elem)=>elem.parameter.memory.indexOf(item) > -1);\r\n            \r\n            phoneMemory = phoneMemory.concat(filterMemory);\r\n         })\r\n            \r\n        return {\r\n               ...state,\r\n               itemsPhone: action.payload.length === 0 ? phoneItem : phoneMemory\r\n           } \r\n            \r\n    case \"FETCH_MENU_LIST\":\r\n        return {\r\n           ...state,\r\n           menuListItem:action.payload.item \r\n        } \r\n    case \"FETCH_PRICE_FILTER\": \r\n    let dataPhone = [...state.itemsPhone]\r\n    dataPhone.sort((a, b) => (a.Price > b.Price) ? 1 : -1)\r\n       return {\r\n        ...state,\r\n          itemsPhone:  [...dataPhone]\r\n       } \r\n\r\n    case \"FETCH_NAME_FILTER\":\r\n        let dataPhoneName = [...state.itemsPhone];\r\n        dataPhoneName.sort((a,b)=> (a.name > b.name) ? 1: -1) \r\n      return {\r\n          ...state,\r\n          itemsPhone: [...dataPhoneName]\r\n      }  \r\n\r\n      default: return state\r\n    }\r\n}\r\nexport default itemReducer","const inititalState = {\r\n    itemsLaptop:[],\r\n    itemLaptop:  {\r\n      \"id\": \"\",\r\n      \"type\":\"\",\r\n      \"name\": \"\",\r\n      \"model\": \"\",\r\n      \"img\": \"\",\r\n      \"Colors\": {},\r\n      \"parameter\": {\r\n        \"ram\": [],\r\n        \"memory\": [],\r\n        \"processor\": [],\r\n        \"year\":\"\",\r\n        \"color\": \"\",\r\n        \"AvailableColors\": {}\r\n      },\r\n      \"price\": [],\r\n      \"Price\": 0,\r\n  },\r\n  laptopInfo:[]\r\n}\r\n\r\nconst laptopReducer = (state = inititalState, action) => {\r\n  switch(action.type) {\r\n    case 'FETCH_ITEM_LAPTOP': \r\n    return {\r\n        ...state,\r\n       itemsLaptop: action.payload.item\r\n    }\r\n    case \"FETCH_LAPTOP_PAGE\": \r\n    return {\r\n      ...state,\r\n       itemLaptop: action.payload.item\r\n    }\r\n    case \"FETCH_LAPTOP_INFO\":\r\n      return {\r\n        ...state,\r\n        laptopInfo: action.payload\r\n      }\r\n    case \"FETCH_LAPTOP_FILTER\": \r\n    let newArray = []; \r\n\t\tlet uniqueObject = {}; \r\n        \r\n        for (let i in action.payload ) { \r\n          let objTitle = action.payload[i]['id']; \r\n          uniqueObject[objTitle] = action.payload[i];\r\n        } \r\n        \r\n        for (let i in uniqueObject) { \r\n             newArray.push(uniqueObject[i]); \r\n        } \r\n     return {\r\n       ...state,\r\n       itemsLaptop: newArray\r\n     }  \r\n     case \"FETCH_PRICE_SORT\": \r\n     let dataLaptop = [...state.itemsLaptop];\r\n    dataLaptop.sort((a,b)=> (a.Price > b.Price) ? 1 : -1)\r\n     return {\r\n       ...state,\r\n      itemsLaptop: [...dataLaptop]\r\n     }\r\n     case \"FETCH_NAME_SORT\":\r\n      let dataPhoneName = [...state.itemsLaptop];\r\n      dataPhoneName.sort((a,b)=> (a.name > b.name) ? 1: -1)\r\n       return {\r\n         ...state,\r\n        itemsLaptop: [...dataPhoneName]\r\n       }\r\n       \r\n\r\n    default: return state; \r\n  }\r\n}\r\n\r\nexport default laptopReducer","import itemReducer from '../reducers/itemReducer'\r\nimport laptopReducer from '../reducers/LaptopReducer'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst allReducer = combineReducers({\r\n    phone: itemReducer,\r\n    laptop: laptopReducer\r\n})\r\n\r\nexport default allReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport rootReducer from './reducers'\nimport * as serviceWorker from './serviceWorker';\nlet store = createStore(rootReducer,compose(\n  applyMiddleware(thunk),\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}